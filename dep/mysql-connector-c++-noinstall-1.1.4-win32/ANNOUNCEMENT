MySQL Connector/C++

This is a release of MySQL Connector/C++, Oracle's
dual-license C++ API for connecting client applications
to MySQL.

Copyright (c) 2008, 2014, Oracle and/or its affiliates. All rights reserved.

--------------------------------------------------------------------------------

Dear MySQL Users,

A new GA (general availability) version of MySQL Connector/C++ has been made available: MySQL Connector/C++ 1.1.4 GA. The MySQL Connector/C++ provides a C++ API for
connecting client applications to the MySQL Server 5.5 or newer. You can download the production release at:

 http://dev.mysql.com/downloads/connector/cpp/1.1.html

The MySQL driver for C++ offers an easy to use API derived from JDBC 4.0. MySQL Workbench is using it successfully since years. 

The major changes in 1.1.4 are:

   Functionality Added or Changed

     * Connector/C++ now supports the following connection options:
       sslVerify (boolean), sslCRL (string), and sslCRLPath (string).
       These correspond to the MYSQL_OPT_SSL_VERIFY_SERVER_CERT,
       MYSQL_OPT_SSL_CRL, and MYSQL_OPT_SSL_CRLPATH options for the
       mysql_options() C API function. (Bug #18461451)

     * Connector/C++ has new functions to provide schema, table, and
       column character set and collation metadata for result sets:

          + ResultSet * DatabaseMetaData::getSchemaCollation(const
            sql::SQLString& catalog, const sql::SQLString&
            schemaPattern)

          + ResultSet * DatabaseMetaData::getSchemaCharset(const
            sql::SQLString& catalog, const sql::SQLString&
            schemaPattern)

          + ResultSet * DatabaseMetaData::getTableCollation(const
            sql::SQLString& catalog, const sql::SQLString&
            schemaPattern, const sql::SQLString& tableNamePattern)

          + ResultSet * DatabaseMetaData::getTableCharset(const
            sql::SQLString& catalog, const sql::SQLString&
            schemaPattern, const sql::SQLString& tableNamePattern)

          + SQLString ResultSetMetaData::getColumnCollation(unsigned
            int columnIndex)

          + SQLString ResultSetMetaData::getColumnCharset(unsigned
            int columnIndex)
       (Bug #72698, Bug #18803345)

     * Connector/C++ now supports the MYSQL_OPT_CONNECT_ATTR_ADD
       option, which accepts an std::map argument. This option
       corresponds to the MYSQL_OPT_CONNECT_ATTR_ADD option for
       mysql_options4(). (Bug #72697, Bug #18803313)

     * Connector/C++ now supports a useLegacyAuth connection option,
       which corresponds to the MYSQL_SECURE_AUTH option for
       mysql_options(). (Bug #69492, Bug #16970753)

     * Connector/C++ is now compiled and linked with Connector/C
       6.1.5 rather than with libmysql.

   Bugs Fixed

     * MySQL_ResultSetMetaData::getColumnTypeName() returned UNKNOWN
       for LONG_BLOB fields. (Bug #72700, Bug #18803414)

     * Connector/C++ version-information methods have been revised to
       return the correct values. (Bug #66975, Bug #14680878)

     * Definitions for character sets and collations were added
       (utf8mb4 in particular). (Bug #71606, Bug #18193771)

You can find further details, including usages examples, in the documentation at:

  http://dev.mysql.com/doc/en/connector-cpp.html


You may also want to contribute to the MySQL Forum on C/C++ at http://forums.mysql.com/list.php?167 or join the MySQL Connector/C++ mailing list
http://lists.mysql.com/connector-cplusplus .

Enjoy!
